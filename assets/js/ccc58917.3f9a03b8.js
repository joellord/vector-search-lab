"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[1],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7578:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:5},i="Add full-text search to your application",l={unversionedId:"atlas-search/add-to-app",id:"atlas-search/add-to-app",title:"Add full-text search to your application",description:"You now know everything you need to add full-text search capabilities to your application.",source:"@site/docs/4-atlas-search/5-add-to-app.mdx",sourceDirName:"4-atlas-search",slug:"/atlas-search/add-to-app",permalink:"/vector-search-lab/docs/atlas-search/add-to-app",draft:!1,editUrl:"https://github.com/mongodb-developer/vector-search-lab/blob/main/docs/4-atlas-search/5-add-to-app.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Construct search queries",permalink:"/vector-search-lab/docs/atlas-search/search-queries"},next:{title:"\ud83e\uddb8 Turbocharge your search with fuzzy matching",permalink:"/vector-search-lab/docs/atlas-search/fuzzy"}},c={},s=[],p={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add-full-text-search-to-your-application"},"Add full-text search to your application"),(0,a.kt)("p",null,"You now know everything you need to add full-text search capabilities to your application."),(0,a.kt)("p",null,"Open up the code from the server file ",(0,a.kt)("inlineCode",{parentName:"p"},"server/controllers/movies.mjs")," once more, and edit the ",(0,a.kt)("inlineCode",{parentName:"p"},"search")," method to use full text search."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You'll need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"aggregate")," method instead of the ",(0,a.kt)("inlineCode",{parentName:"p"},"find")," method you used earlier. Check out the ",(0,a.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/"},"documentation")," for more details.")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Answer"),(0,a.kt)("div",null,(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'  async search(searchTerm) {\n    const movies = await collection\n      .aggregate([\n        {\n          $search: {\n            index: "default",\n            text: {\n              query: searchTerm,\n              path: {\n                wildcard: "*",\n              },\n            },\n          },\n        },\n        {\n          $project: {\n            title: 1,\n            year: 1,\n            "imdb.rating": 1,\n            fullplot: 1,\n            poster: 1,\n            released: 1,\n            genres: 1\n          },\n        },\n        {\n          $limit: 20\n        }\n      ]).toArray();\n\n    return movies;\n  }\n')))))}d.isMDXComponent=!0}}]);