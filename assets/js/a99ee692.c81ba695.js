"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[907],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(r),h=o,m=c["".concat(s,".").concat(h)]||c[h]||d[h]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4939:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},i="\ud83e\uddb8 Querying with Regexes",l={unversionedId:"query-data/query-regex",id:"query-data/query-regex",title:"\ud83e\uddb8 Querying with Regexes",description:"In the last step, you learned how to query for documents that match a specific value. In this step, you'll learn how to query for documents that match a pattern.",source:"@site/docs/2-query-data/2-query-regex.mdx",sourceDirName:"2-query-data",slug:"/query-data/query-regex",permalink:"/vector-search-lab/docs/query-data/query-regex",draft:!1,editUrl:"https://github.com/mongodb-developer/vector-search-lab/blob/main/docs/2-query-data/2-query-regex.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Querying data",permalink:"/vector-search-lab/docs/query-data/query-find"},next:{title:"Aggregation pipelines",permalink:"/vector-search-lab/docs/category/aggregation-pipelines"}},s={},u=[{value:"Edit the regex endpoint",id:"edit-the-regex-endpoint",level:2},{value:"Test it out",id:"test-it-out",level:2},{value:"Problems with this approach",id:"problems-with-this-approach",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-querying-with-regexes"},"\ud83e\uddb8 Querying with Regexes"),(0,o.kt)("p",null,"In the last step, you learned how to query for documents that match a specific value. In this step, you'll learn how to query for documents that match a pattern."),(0,o.kt)("p",null,"This is similar to doing a ",(0,o.kt)("inlineCode",{parentName:"p"},"LIKE")," query in SQL."),(0,o.kt)("h2",{id:"edit-the-regex-endpoint"},"Edit the regex endpoint"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"server/controllers/movies.mjs")," file, you will notice a method called ",(0,o.kt)("inlineCode",{parentName:"p"},"findMoviesWithRegex"),". This is where we'll add the code to query by regex."),(0,o.kt)("p",null,"Using the almost same code you used in the previous step, add the code needed to query the data using a regex. To do so, you need to change the value passed in the query to a regular expression rather than the parameter directly."),(0,o.kt)("p",null,"To do so, you will need to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"$regex")," operator. You can find more about this operator in the ",(0,o.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/reference/operator/query/regex/"},"documentation"),"."),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Answer"),(0,o.kt)("div",null,(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'  async findMoviesWithRegex(searchTerm) {\n    const movies = await collection\n      .find({ title: {$regex: new RegExp(searchTerm, "i")} }, {\n        title: 1,\n        year: 1,\n        "imdb.rating": 1,\n        fullplot: 1,\n        poster: 1,\n        released: 1,\n        genres: 1\n      })\n      .limit(20)\n      .toArray();\n    return movies;\n  }\n')))),(0,o.kt)("h2",{id:"test-it-out"},"Test it out"),(0,o.kt)("p",null,"Try it out. In the client, change the dropdown to ",(0,o.kt)("inlineCode",{parentName:"p"},"Regex Query"),", and type in a partial name. You should see the results filtered by the regex. Something like ",(0,o.kt)("inlineCode",{parentName:"p"},"Terminator")," should now return multiple results."),(0,o.kt)("h2",{id:"problems-with-this-approach"},"Problems with this approach"),(0,o.kt)("p",null,"This approach works, but it's not ideal. The reason it's not very efficient is that it has to scan the entire collection to find the matches. This is because the regex is not indexed."),(0,o.kt)("p",null,"That doesn't mean you should never use regexes to query. If you have a small collection, it's not a big deal. But if you have a large collection, it can be a problem."),(0,o.kt)("p",null,"A good use case for a regex is when you want to match documents ",(0,o.kt)("em",{parentName:"p"},"starting"),' with a certain string. For example, if you wanted to find all movies whose title starts with "A", you could use the regex ',(0,o.kt)("inlineCode",{parentName:"p"},"/^A/"),". This would be a good use case for a regex as it can still leverage the index on the ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," field."))}d.isMDXComponent=!0}}]);